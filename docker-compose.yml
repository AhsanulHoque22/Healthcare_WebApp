version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: healthcare-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-healthcare123}
      MYSQL_DATABASE: ${DB_NAME:-healthcare_db}
      MYSQL_USER: ${DB_USER:-healthcare_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-healthcare123}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - healthcare-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: healthcare-backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-healthcare_db}
      DB_USER: ${DB_USER:-healthcare_user}
      DB_PASSWORD: ${DB_PASSWORD:-healthcare123}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRE: 7d
      CLIENT_URL: http://localhost:3000
    ports:
      - "5001:5000"
    depends_on:
      - mysql
    networks:
      - healthcare-network
    restart: unless-stopped
    volumes:
      - ./server/uploads:/app/uploads

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: healthcare-frontend
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - healthcare-network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: healthcare-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - healthcare-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  healthcare-network:
    driver: bridge
